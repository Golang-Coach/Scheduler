// Code generated by mockery v1.0.0
package mocks

import context "context"
import github "github.com/google/go-github/github"
import mock "github.com/stretchr/testify/mock"

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
	Repositories *IRepositoryServices
}

// RateLimits provides a mock function with given fields: ctx
func (_m *IClient) RateLimits(ctx context.Context) (*github.RateLimits, *github.Response, error) {
	ret := _m.Called(ctx)

	var r0 *github.RateLimits
	if rf, ok := ret.Get(0).(func(context.Context) *github.RateLimits); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*github.RateLimits)
		}
	}

	var r1 *github.Response
	if rf, ok := ret.Get(1).(func(context.Context) *github.Response); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*github.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context) error); ok {
		r2 = rf(ctx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
