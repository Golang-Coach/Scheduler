// Code generated by mockery v1.0.0
package mocks

import "github.com/globalsign/mgo"
import "github.com/stretchr/testify/mock"

// ICollection is an autogenerated mock type for the ICollection type
type ICollection struct {
	mock.Mock
}

// Find provides a mock function with given fields: query
func (_m *ICollection) Find(query interface{}) *mgo.Query {
	ret := _m.Called(query)

	var r0 *mgo.Query
	if rf, ok := ret.Get(0).(func(interface{}) *mgo.Query); ok {
		r0 = rf(query)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mgo.Query)
		}
	}

	return r0
}

// Insert provides a mock function with given fields: _a0
func (_m *ICollection) Insert(_a0 ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, _a0...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(...interface{}) error); ok {
		r0 = rf(_a0...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: selector, update
func (_m *ICollection) Update(selector interface{}, update interface{}) error {
	ret := _m.Called(selector, update)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, interface{}) error); ok {
		r0 = rf(selector, update)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
